[{"C:\\GitHub\\repositories\\airmixx\\src\\reportWebVitals.ts":"1","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx":"2","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx":"3","C:\\GitHub\\repositories\\airmixx\\src\\Redux\\reducers\\app.tsx":"4","C:\\GitHub\\repositories\\airmixx\\src\\index.tsx":"5","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Components\\Certificate\\Certificate.tsx":"6","C:\\GitHub\\repositories\\airmixx\\src\\Redux\\reducers\\modal.tsx":"7","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx":"8","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"9","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\InputString\\InputString.tsx":"10","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Components\\Contacts\\Contacts.tsx":"11","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\ButtonComponent\\ButtonComponent.tsx":"12","C:\\GitHub\\repositories\\airmixx\\src\\App.tsx":"13","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixRequest\\AirmixRequest.tsx":"14","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixSticker\\AirmixSticker.tsx":"15","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixIconCard\\AirmixIconCard.tsx":"16","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Underline\\Underline.tsx":"17","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixSuccess\\AirmixSuccess.tsx":"18","C:\\GitHub\\repositories\\airmixx\\src\\Redux\\reducers\\toast.tsx":"19","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx":"20","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx":"21","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\AirmixProductCard\\AirmixProductCard.tsx":"22","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"23","C:\\GitHub\\repositories\\airmixx\\src\\Config\\Config.ts":"24","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\ToggleMessageEl\\ToggleMessageEl.tsx":"25","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\MainLayout.tsx":"26","C:\\GitHub\\repositories\\airmixx\\src\\Redux\\actions\\modal.tsx":"27","C:\\GitHub\\repositories\\airmixx\\src\\Redux\\index.tsx":"28"},{"size":440,"mtime":1632237835583,"results":"29","hashOfConfig":"30"},{"size":1389,"mtime":1633368951037,"results":"31","hashOfConfig":"30"},{"size":5220,"mtime":1633079705495,"results":"32","hashOfConfig":"30"},{"size":1488,"mtime":1632237835442,"results":"33","hashOfConfig":"30"},{"size":673,"mtime":1632237835582,"results":"34","hashOfConfig":"30"},{"size":4344,"mtime":1633369567136,"results":"35","hashOfConfig":"30"},{"size":1338,"mtime":1633097814031,"results":"36","hashOfConfig":"30"},{"size":3427,"mtime":1633082674579,"results":"37","hashOfConfig":"30"},{"size":1422,"mtime":1633098918603,"results":"38","hashOfConfig":"30"},{"size":901,"mtime":1632979071443,"results":"39","hashOfConfig":"30"},{"size":7587,"mtime":1633252814796,"results":"40","hashOfConfig":"30"},{"size":412,"mtime":1632984618980,"results":"41","hashOfConfig":"30"},{"size":950,"mtime":1633083358487,"results":"42","hashOfConfig":"30"},{"size":5532,"mtime":1633253169260,"results":"43","hashOfConfig":"30"},{"size":522,"mtime":1633080127073,"results":"44","hashOfConfig":"30"},{"size":1054,"mtime":1632409786926,"results":"45","hashOfConfig":"30"},{"size":320,"mtime":1632244786620,"results":"46","hashOfConfig":"30"},{"size":2354,"mtime":1633011478591,"results":"47","hashOfConfig":"30"},{"size":891,"mtime":1632237835443,"results":"48","hashOfConfig":"30"},{"size":6717,"mtime":1633251404867,"results":"49","hashOfConfig":"30"},{"size":5583,"mtime":1633368896370,"results":"50","hashOfConfig":"30"},{"size":763,"mtime":1633078250347,"results":"51","hashOfConfig":"30"},{"size":1281,"mtime":1633082609669,"results":"52","hashOfConfig":"30"},{"size":1893,"mtime":1633096909766,"results":"53","hashOfConfig":"30"},{"size":1224,"mtime":1632409786928,"results":"54","hashOfConfig":"30"},{"size":959,"mtime":1632237835426,"results":"55","hashOfConfig":"30"},{"size":488,"mtime":1632237835432,"results":"56","hashOfConfig":"30"},{"size":419,"mtime":1633253277087,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1hd514l",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\GitHub\\repositories\\airmixx\\src\\reportWebVitals.ts",[],["122","123"],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx",[],["124","125"],"C:\\GitHub\\repositories\\airmixx\\src\\Redux\\reducers\\app.tsx",[],["126","127"],"C:\\GitHub\\repositories\\airmixx\\src\\index.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Components\\Certificate\\Certificate.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Redux\\reducers\\modal.tsx",["128"],"import {\r\n  HIDE_REQUESTFORM_MODAL,\r\n  SET_MOBILE_MENU,\r\n  SET_MODAL_WINDOW,\r\n  SHOW_REQUESTFORM_MODAL,\r\n} from '../constants/ActionTypes'\r\nimport { ModalState } from '../interfaces/interfaces'\r\nimport { ModalActionType } from '../interfaces/modal'\r\n\r\nconst initialState: ModalState = {\r\n  modalRequestForm: {\r\n    isActive: false,\r\n  },\r\n  mobileMenu: {\r\n    isActive: false,\r\n  },\r\n  modalWindow: {\r\n    isActive: false,\r\n  },\r\n}\r\n\r\nconst modal = (state: ModalState = initialState, action: ModalActionType) => {\r\n  switch (action.type) {\r\n    case SHOW_REQUESTFORM_MODAL:\r\n      return {\r\n        ...state,\r\n        modalRequestForm: {\r\n          isActive: true,\r\n        },\r\n      }\r\n    case HIDE_REQUESTFORM_MODAL:\r\n      return {\r\n        ...state,\r\n        modalRequestForm: {\r\n          isActive: false,\r\n        },\r\n      }\r\n    case SET_MOBILE_MENU:\r\n      return {\r\n        ...state,\r\n        mobileMenu: {\r\n          isActive: action.isActive,\r\n        },\r\n      }\r\n    case SET_MODAL_WINDOW:\r\n      return {\r\n        ...state,\r\n        modalWindow: {\r\n          isActive: action.isActive,\r\n        },\r\n      }\r\n\r\n    case SET_MODAL_WINDOW:\r\n      return {\r\n        ...state,\r\n        modalWindow: {\r\n          isActive: action.isActive,\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default modal\r\n","C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\InputString\\InputString.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Components\\Contacts\\Contacts.tsx",["129","130","131","132"],"import React, { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport FormDataIface from '../../../../../Redux/interfaces/AdditionalInterfaces/FormDataIface'\r\nimport { Element } from 'react-scroll'\r\nimport ScrollAnimation from 'react-animate-on-scroll'\r\nimport './Contacts.scss'\r\nimport { Config } from '../../../../../Config/Config'\r\nimport { connect } from 'react-redux'\r\nimport { setModalWindow } from '../../../../../Redux/actions/modal'\r\nimport axios from 'axios'\r\nimport LoaderHorizontal from '../../../../../SharedComponents/LoaderHorizontal/LoaderHorizontal'\r\n\r\ninterface ContactsProps {\r\n  setModalWindow: (isActive: boolean) => void\r\n}\r\n\r\nconst Contacts = (props: ContactsProps) => {\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormDataIface>()\r\n\r\n  const [phoneLength] = useState(11)\r\n  const [phoneError, setPhoneError] = useState<boolean>(false)\r\n\r\n  const onClickHandler = (data: FormDataIface): void => {\r\n    const phoneString = data.phone.match(/\\d+/g)?.join('') as string\r\n    phoneString.length < phoneLength ? setPhoneError(true) : sendFormData(data)\r\n  }\r\n\r\n  const sendFormData = async (data: FormDataIface): Promise<any> => {\r\n    setLoading(true)\r\n    const mailSettings = { ...Config.mailSettings, userName: data.name, userPhone: data.phone, siteUrl: Config.url }\r\n    axios\r\n      .post(mailSettings.apiPath, mailSettings)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(res.data)\r\n          props.setModalWindow(true)\r\n        } else {\r\n          console.log('Ошибка отправки сообщения')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n      .finally(() => setLoading(false))\r\n\r\n    // props.setModalForm(false)\r\n    // props.setModalThanks(true)\r\n  }\r\n\r\n  return (\r\n    <Element name=\"Contacts\">\r\n      <Container fluid className=\"Contacts\">\r\n        <ScrollAnimation animateOnce={true} offset={200} animateIn=\"animate__fadeInUp\">\r\n          <Container className=\"Contacts__cont\">\r\n            <div className=\"Contacts__block1\">\r\n              <div className=\"row\">\r\n                <Col md={8} xs={12} className=\"Contacts__question\">\r\n                  <h1>Готовы оформить заказ или остались вопросы?</h1>\r\n                  <p>Оставьте заявку. Мы свяжемся с вами и ответим на все возникшие вопросы</p>\r\n                </Col>\r\n                <Col md={4} xs={12} className=\"Contacts__form p-0\">\r\n                  <Row className=\"Contacts__input m-0\">\r\n                    <Col className=\"Contacts__inputCol p-0\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Введите имя\"\r\n                        {...register('name', {\r\n                          required: { value: true, message: 'Обязательное для заполнения поле' },\r\n                          minLength: { value: 3, message: 'Минимальная длина строки 3 символа' },\r\n                          pattern: { value: /^[\\s-_а-яА-Я]+$/i, message: 'Только кириллические символы' },\r\n                        })}\r\n                      />\r\n\r\n                      {errors.name && <small className=\"text-danger\">{errors.name.message}</small>}\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"Contacts__input m-0\">\r\n                    <Col className=\"Contacts__inputCol p-0\">\r\n                      <ReactInputMask\r\n                        mask=\"+7 (999) 999-99-99\"\r\n                        placeholder=\"Номер телефона\"\r\n                        type=\"tel\"\r\n                        onFocus={() => setPhoneError(false)}\r\n                        {...register('phone', {\r\n                          required: { value: true, message: 'Обязательное для заполнения поле' },\r\n                        })}\r\n                      />\r\n\r\n                      {errors.phone && <small className=\"text-danger\">{errors.phone.message}</small>}\r\n                      {phoneError && <small className=\"text-danger\">Номер телефона введен неполностью</small>}\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"Contacts__button m-0\">\r\n                    {loading ? (\r\n                      <LoaderHorizontal />\r\n                    ) : (\r\n                      <div className=\"Contact__buttonEl\" onClick={handleSubmit((data) => onClickHandler(data))}>\r\n                        Отправить заявку\r\n                      </div>\r\n                    )}\r\n                  </Row>\r\n                  <p className=\"pt-3\">\r\n                    Оставляя заявку, вы соглашаетесь с{' '}\r\n                    <a href={`${Config.url}/polotic.pdf`} target=\"_blank\">\r\n                      политикой конфиденциальности\r\n                    </a>\r\n                  </p>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </ScrollAnimation>\r\n\r\n        <Container className=\"Contacts__cont Container2\">\r\n          <Row className=\"Contacts__Row m-0\">\r\n            <Col xl={6} className=\"Contacts__Col p-0\">\r\n              <h1 className=\"contactsHeader\">Или свяжитесь с нами самостоятельно</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"Contacts__Row pt-5 m-0 justify-content-between align-items-center\">\r\n            <div className=\"Contacts__El phone\">\r\n              <ScrollAnimation animateOnce={true} offset={200} animateIn=\"animate__fadeIn\" delay={100}>\r\n                <a href=\"tel:89299250008\">+7 (929) 925-00-08</a>\r\n              </ScrollAnimation>\r\n            </div>\r\n            <div className=\"Contacts__El phone\">\r\n              <ScrollAnimation animateOnce={true} offset={200} animateIn=\"animate__fadeIn\" delay={300}>\r\n                <a href=\"tel:89608586777\">+7 (960) 858-67-77</a>\r\n              </ScrollAnimation>\r\n            </div>\r\n            <div className=\"Contacts__El mail\">\r\n              <ScrollAnimation animateOnce={true} offset={200} animateIn=\"animate__fadeIn\" delay={500}>\r\n                <a href=\"mailto:airmix_pods@mail.ru\">airmix_pods@mail.ru</a>\r\n              </ScrollAnimation>\r\n            </div>\r\n            <div className=\"Contacts__El\">\r\n              <ScrollAnimation animateOnce={true} offset={200} animateIn=\"animate__fadeIn\" delay={700}>\r\n                <a href={Config.socialLinks[0].url} target=\"_blank\">\r\n                  <img className=\"hvr-grow\" src=\"/icons/wa.svg\" alt=\"\" />\r\n                </a>\r\n                <a href={Config.socialLinks[1].url} target=\"_blank\">\r\n                  <img className=\"pl-5 pr-5 hvr-grow\" src=\"/icons/tg.svg\" alt=\"\" />\r\n                </a>\r\n                <a href={Config.socialLinks[2].url} target=\"_blank\">\r\n                  <img className=\"hvr-grow\" src=\"/icons/insta.svg\" alt=\"\" />\r\n                </a>\r\n              </ScrollAnimation>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    </Element>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalWindow,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Contacts)\r\n",["133","134"],"C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\ButtonComponent\\ButtonComponent.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\App.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixRequest\\AirmixRequest.tsx",["135","136"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport { connect } from 'react-redux'\r\nimport FormDataIface from '../../Redux/interfaces/AdditionalInterfaces/FormDataIface'\r\nimport './AirmixRequest.scss'\r\nimport { hideRequestModal, setModalWindow } from '../../Redux/actions/modal'\r\nimport axios from 'axios'\r\nimport { Config } from '../../Config/Config'\r\nimport LoaderHorizontal from '../LoaderHorizontal/LoaderHorizontal'\r\n\r\ninterface AirmixRequestProps {\r\n  hideRequestModal: () => void\r\n  setModalWindow: (isActive: boolean) => void\r\n}\r\n\r\nconst AirmixRequest = (props: AirmixRequestProps) => {\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    bodyBlock()\r\n  }, [])\r\n\r\n  const bodyBlock = (): void => {\r\n    document.querySelector('body')?.classList.add('modal-open')\r\n  }\r\n\r\n  const bodyUnBlock = (): void => {\r\n    document.querySelector('body')?.classList.remove('modal-open')\r\n  }\r\n\r\n  const closeButtonHandler = (): void => {\r\n    bodyUnBlock()\r\n    props.hideRequestModal()\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormDataIface>()\r\n\r\n  const [phoneLength] = useState(11)\r\n  const [phoneError, setPhoneError] = useState<boolean>(false)\r\n\r\n  const onClickHandler = (data: FormDataIface): void => {\r\n    const phoneString = data.phone.match(/\\d+/g)?.join('') as string\r\n    phoneString.length < phoneLength ? setPhoneError(true) : sendFormData(data)\r\n  }\r\n\r\n  const sendFormData = async (data: FormDataIface): Promise<any> => {\r\n    setLoading(true)\r\n    const mailSettings = { ...Config.mailSettings, userName: data.name, userPhone: data.phone, siteUrl: Config.url }\r\n    axios\r\n      .post(mailSettings.apiPath, mailSettings)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(res.data)\r\n          props.hideRequestModal()\r\n          props.setModalWindow(true)\r\n        } else {\r\n          console.log('Ошибка отправки сообщения')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n      .finally(() => setLoading(false))\r\n\r\n    // props.setModalForm(false)\r\n    // props.setModalThanks(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"AirmixRequest d-flex justify-content-center align-items-center\">\r\n      <div className=\"AirmixRequest__window animated animate__fadeInUpBig\">\r\n        <Row className=\"AirmixRequest__closeRow m-0 d-flex justify-content-end\">\r\n          <div className=\"AirmixRequest__closeCont\">\r\n            <img src=\"/icons/exit.svg\" alt=\"\" onClick={() => closeButtonHandler()} />\r\n          </div>\r\n        </Row>\r\n        <Row className=\"AirmixRequest__content m-0 justify-content-center align-items-center\">\r\n          <h3>Оставьте заявку</h3>\r\n          <p>Мы свяжемся с вами и ответим на все ваши вопросы</p>\r\n\r\n          <div className=\"Contacts__form\">\r\n            <Row className=\"Contacts__input m-0\">\r\n              <Col className=\"Contacts__inputCol p-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Введите имя\"\r\n                  {...register('name', {\r\n                    required: { value: true, message: 'Обязательное для заполнения поле' },\r\n                    minLength: { value: 3, message: 'Минимальная длина строки 3 символа' },\r\n                    pattern: { value: /^[\\s-_а-яА-Я]+$/i, message: 'Только кириллические символы' },\r\n                  })}\r\n                />\r\n\r\n                {errors.name && <small className=\"text-danger\">{errors.name.message}</small>}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"Contacts__input m-0\">\r\n              <Col className=\"Contacts__inputCol p-0\">\r\n                <ReactInputMask\r\n                  mask=\"+7 (999) 999-99-99\"\r\n                  placeholder=\"Номер телефона\"\r\n                  type=\"tel\"\r\n                  onFocus={() => setPhoneError(false)}\r\n                  {...register('phone', {\r\n                    required: { value: true, message: 'Обязательное для заполнения поле' },\r\n                  })}\r\n                />\r\n\r\n                {errors.phone && <small className=\"text-danger\">{errors.phone.message}</small>}\r\n                {phoneError && <small className=\"text-danger\">Номер телефона введен неполностью</small>}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"Contacts__button m-0\">\r\n              {loading ? (\r\n                <LoaderHorizontal />\r\n              ) : (\r\n                <div className=\"Contact__buttonEl\" onClick={handleSubmit((data) => onClickHandler(data))}>\r\n                  Отправить\r\n                </div>\r\n              )}\r\n            </Row>\r\n          </div>\r\n\r\n          <h6>\r\n            Оставляя заявку, вы соглашаетесь{' '}\r\n            <a href={`${Config.url}/polotic.pdf`} target=\"_blank\">\r\n              политикой конфиденциальности\r\n            </a>\r\n          </h6>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  hideRequestModal,\r\n  setModalWindow,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AirmixRequest)\r\n","C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixSticker\\AirmixSticker.tsx",["137","138","139"],"C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixIconCard\\AirmixIconCard.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Underline\\Underline.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\AirmixSuccess\\AirmixSuccess.tsx",["140","141","142","143","144","145","146"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport { connect } from 'react-redux'\r\nimport FormDataIface from '../../Redux/interfaces/AdditionalInterfaces/FormDataIface'\r\nimport './AirmixSuccess.scss'\r\nimport { setModalWindow } from '../../Redux/actions/modal'\r\n\r\ninterface AirmixSuccessProps {\r\n  setModalWindow: (isActive: boolean) => void\r\n}\r\n\r\nconst AirmixSuccess = (props: AirmixSuccessProps) => {\r\n  useEffect(() => {\r\n    bodyBlock()\r\n  }, [])\r\n\r\n  const bodyBlock = (): void => {\r\n    document.querySelector('body')?.classList.add('modal-open')\r\n  }\r\n\r\n  const bodyUnBlock = (): void => {\r\n    document.querySelector('body')?.classList.remove('modal-open')\r\n  }\r\n\r\n  const closeButtonHandler = (): void => {\r\n    bodyUnBlock()\r\n    props.setModalWindow(false)\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormDataIface>()\r\n\r\n  const [phoneLength] = useState(11)\r\n  const [phoneError, setPhoneError] = useState<boolean>(false)\r\n\r\n  const onClickHandler = (data: FormDataIface): void => {\r\n    const phoneString = data.phone.match(/\\d+/g)?.join('') as string\r\n    phoneString.length < phoneLength ? setPhoneError(true) : sendFormData(data)\r\n  }\r\n\r\n  const sendFormData = (data: FormDataIface): void => {\r\n    console.log(data)\r\n  }\r\n\r\n  return (\r\n    <div className=\"AirmixSuccess d-flex justify-content-center align-items-center\">\r\n      <div className=\"AirmixSuccess__window\">\r\n        <Row className=\"AirmixSuccess__closeRow m-0 d-flex justify-content-end\">\r\n          <div className=\"AirmixSuccess__closeCont\">\r\n            <img src=\"/icons/exit.svg\" alt=\"\" onClick={() => closeButtonHandler()} />\r\n          </div>\r\n        </Row>\r\n        <Row className=\"AirmixSuccess__content m-0 justify-content-center align-items-center\">\r\n          <h3>Спасибо за заявку!</h3>\r\n          <p>В ближайшее время мы свяжемся с вами</p>\r\n\r\n          <div className=\"Contact__buttonEl\" onClick={() => closeButtonHandler()}>\r\n            Вернуться на сайт\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalWindow,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AirmixSuccess)\r\n","C:\\GitHub\\repositories\\airmixx\\src\\Redux\\reducers\\toast.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx",["147"],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\AirmixProductCard\\AirmixProductCard.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",["148"],"C:\\GitHub\\repositories\\airmixx\\src\\Config\\Config.ts",[],"C:\\GitHub\\repositories\\airmixx\\src\\SharedComponents\\ToggleMessageEl\\ToggleMessageEl.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Layouts\\MainLayout\\MainLayout.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Redux\\actions\\modal.tsx",[],"C:\\GitHub\\repositories\\airmixx\\src\\Redux\\index.tsx",["149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"152","replacedBy":"155"},{"ruleId":"150","replacedBy":"156"},{"ruleId":"152","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":53,"column":5,"nodeType":"160","messageId":"161","endLine":59,"endColumn":8},{"ruleId":"162","severity":1,"message":"163","line":112,"column":59,"nodeType":"164","endLine":112,"endColumn":74},{"ruleId":"162","severity":1,"message":"163","line":146,"column":53,"nodeType":"164","endLine":146,"endColumn":68},{"ruleId":"162","severity":1,"message":"163","line":149,"column":53,"nodeType":"164","endLine":149,"endColumn":68},{"ruleId":"162","severity":1,"message":"163","line":152,"column":53,"nodeType":"164","endLine":152,"endColumn":68},{"ruleId":"150","replacedBy":"165"},{"ruleId":"152","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":132,"column":51,"nodeType":"164","endLine":132,"endColumn":66},{"ruleId":"167","severity":1,"message":"171","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":24},{"ruleId":"167","severity":1,"message":"172","line":2,"column":26,"nodeType":"169","messageId":"170","endLine":2,"endColumn":29},{"ruleId":"167","severity":1,"message":"171","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":24},{"ruleId":"167","severity":1,"message":"173","line":32,"column":5,"nodeType":"169","messageId":"170","endLine":32,"endColumn":13},{"ruleId":"167","severity":1,"message":"174","line":33,"column":5,"nodeType":"169","messageId":"170","endLine":33,"endColumn":17},{"ruleId":"167","severity":1,"message":"175","line":34,"column":18,"nodeType":"169","messageId":"170","endLine":34,"endColumn":24},{"ruleId":"167","severity":1,"message":"176","line":38,"column":10,"nodeType":"169","messageId":"170","endLine":38,"endColumn":20},{"ruleId":"167","severity":1,"message":"177","line":40,"column":9,"nodeType":"169","messageId":"170","endLine":40,"endColumn":23},{"ruleId":"167","severity":1,"message":"178","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":26,"column":43,"nodeType":"164","endLine":26,"endColumn":58},{"ruleId":"167","severity":1,"message":"179","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":29},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],["180"],["181"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["180"],["181"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","'phoneError' is assigned a value but never used.","'onClickHandler' is assigned a value but never used.","'useState' is defined but never used.","'composeWithDevTools' is defined but never used.","no-global-assign","no-unsafe-negation"]